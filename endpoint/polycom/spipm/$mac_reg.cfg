<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--
#################PROVISIONER.NET#################
# This Configuration file was generated from the Provisioner.net Library by {$provisioner_processor_info}
# Generated on: {$provisioner_generated_timestamp}
# 
# Provisioner Information Follows:
# Brand Revision Timestamp: {$provisioner_brand_timestamp}
# Family Revision Timestamp: {$provisioner_family_timestamp}
# 
##################################################
-->
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- Generated reg-advanced.cfg Configuration File -->
<polycomConfig xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="polycomConfig.xsd">
  <call call.transferOnConferenceEnd="1">
    <call.autoAnswer call.autoAnswer.H323="0" call.autoAnswer.SIP="0" call.autoAnswer.micMute="1" call.autoAnswer.ringClass="ringAutoAnswer" call.autoAnswer.videoMute="0">
    </call.autoAnswer>
    <call.autoOffHook call.autoOffHook.1.contact="" call.autoOffHook.1.enabled="0" call.autoOffHook.1.protocol="" call.autoOffHook.2.contact="" call.autoOffHook.2.enabled="0" call.autoOffHook.2.protocol="">
    </call.autoOffHook>
    <call.donotdisturb call.donotdisturb.perReg="0">
    </call.donotdisturb>
    <call.missedCallTracking call.missedCallTracking.1.enabled="1" call.missedCallTracking.2.enabled="1">
    </call.missedCallTracking>
    <call.serverMissedCall call.serverMissedCall.1.enabled="0" call.serverMissedCall.2.enabled="0">
    </call.serverMissedCall>
  </call>
  <device>
    <device.auth device.auth.localUserPassword="">
      <device.auth.localUserPassword device.auth.localUserPassword.set="0">
      </device.auth.localUserPassword>
    </device.auth>
    <device.sntp device.sntp.gmtOffset="{{ timezone }}" device.sntp.serverName="{{ ntp_server|default('pool.ntp.org') }}">
      <device.sntp.gmtOffset device.sntp.gmtOffset.set="1">
      </device.sntp.gmtOffset>
      <device.sntp.serverName device.sntp.serverName.set="1">
      </device.sntp.serverName>
    </device.sntp>
    <device.em device.em.power="">
      <device.em.power device.em.power.set="0">
      </device.em.power>
    </device.em>
  </device>
  {% set x = 1 %}
  {% for line in lines %}
    <reg
      reg.{{ x }}.displayName="{{ line.display_name }}"
      reg.{{ x }}.address="{{ line.username }}"
      reg.{{ x }}.server.1.address="{{ line.sip_server.1.host }}"
      reg.{{ x }}.server.1.port="{{ line.sip_server.1.port }}"
      reg.{{ x }}.server.1.register="1"
      reg.{{ x }}.server.1.expires="{{ line.sip_server.1.expire|default('60') }}"
      reg.{{ x }}.label="{{ line.display_name }}"
      reg.{{ x }}.type="{{ line.type|default('private') }}"
      reg.{{ x }}.thirdPartyName="{{ line.third_party_name }}"
      reg.{{ x }}.auth.userId="{{ line.auth_name }}"
      reg.{{ x }}.auth.password="{{ line.auth_password }}"

      reg.{{ x }}.outboundProxy.address="{{ line.outbound_proxy.host }}"
      reg.{{ x }}.outboundProxy.port="{{ line.outbound_proxy.port }}"
      reg.{{ x }}.outboundProxy.transport="{{ line.outbound_proxy.transport|default('UDPOnly') }}"
      reg.{{ x }}.ringType="{{ line.ringtype|default('2') }}"
      reg.{{ x }}.lineKeys="{{ line.linekeys }}"/>

    <call>
      <autoOffHook
        call.autoOffHook.{{ x }}.enabled="{{ line.call.autoOffHook.enable|default('0') }}"
        call.autoOffHook.{{ x }}.contact="{{ line.call.autoOffHook.contact }}" />
      <missedCallTracking call.missedCallTracking.{{ x }}.enabled="{{ line.call.missedCallTracking|default('1') }}" />
      <serverMissedCall call.serverMissedCall.{{ x }}.enabled="{{ line.call.serverMissedCall|default('0') }}" />
      <callWaiting call.callWaiting.ring="{{ line.call.callWaiting_ring|default('beep') }}"/>
    </call>

    <divert
      divert.{{ x }}.contact="{{ line.divert.contact }}"
      divert.{{ x }}.autoOnSpecificCaller="{{ line.divert.autoOnSpecificCaller|default('1') }}"
      divert.{{ x }}.sharedDisabled="{{ line.divert.shareDisabled|default('1') }}">
      <fwd divert.fwd.{{ x }}.enabled="{{ line.divert.forward|default('1') }}"/>
      <busy
        divert.busy.{{ x }}.enabled="{{ line.divert.busy.enable|default('0') }}"
        divert.busy.{{ x }}.contact="{{ line.divert.busy.contact }}"/>
      <noanswer
        divert.noanswer.{{ x }}.enabled="{{ line.divert.noanswer.enable|default('0') }}"
        divert.noanswer.{{ x }}.timeout="{{ line.divert.noanswer.timeout|default('60') }}"
        divert.noanswer.{{ x }}.contact="{{ line.divert.noanswer.contact }}"/>
      <dnd
        divert.dnd.{{ x }}.enabled="{{ line.divert.dnd.enable|default('0') }}"
        divert.dnd.{{ x }}.contact="{{ line.divert.dnd.contact }}"/>
    </divert>

    <dialplan
      <digitmap
        dialplan.{{ x }}.digitmap="{{ line.dialplan.digitmap.digitmap|default('*xxT|xxxxT|[2-9]11|0T|011xxx.T|[1][2-9]xxxxxxxxx|[2-9]xxxxxxxxx|[2-9]xxxT') }}"
        dialplan.{{ x }}.digitmap.timeOut="{{ line.dialplan.digitmap.timeOut|default('3|3|3|3|3|3|3|3') }}"/>
    </dialplan>

    <msg msg.bypassInstantMessage="{{ line.msg.bypassInstantMessage|default('1') }}">
      <mwi
        msg.mwi.{{ x }}.subscribe="{{ line.msg.mwi.subscribe }}"
        msg.mwi.{{ x }}.callBackMode="{{ line.msg.mwi.callBackMode|default('contact') }}"
        msg.mwi.{{ x }}.callBack="{{ line.msg.mwi.callBack|default('*97') }}"/>
    </msg>
  {% set x = x + 1 %}
  {% endfor %}

<microbrowser mb.proxy="" mb.ssawc.call.mode="" mb.ssawc.enabled="">

  <main 
    mb.main.home="{{ line.microbrowser.main.home }}"
    mb.main.idleTimeout=""
    mb.main.statusbar=""
  />

  <idleDisplay
    mb.idleDisplay.home="{{ line.microbrowser.idle_display.home }}"
    mb.idleDisplay.refresh="{{ line.microbrowser.idle_display.refresh|default('600') }}"
  />
  <limits
    mb.limits.cache="5"/>

</microbrowser>

<attendant
  attendant.reg="1"
  {% set x = 1 %}
  {% for attendant in attendants %}
  attendant.resourceList.{{ x }}.address="sip:{{ attendant.extension }}@{{ attendant.server }}"
  attendant.resourceList.{{ x }}.label="{{ attendant.label }}"
  attendant.resourceList.{{ x }}.type="normal"
  {% set x = x + 1 %}
  {% endfor %}
/>
  <se se.destination="chassis">
    <se.rt>
      <se.rt.modification se.rt.modification.enabled="1">
      </se.rt.modification>
    </se.rt>
  </se>
  <up up.25mm="1" up.accessibilityFeatures="0" up.analogHeadsetOption="0" up.audioMode="0" up.callTypeOrderVoice="0" up.handsfreeMode="1" up.headsetMode="0" up.localClockEnabled="1" up.manualProtocolRouting="1" up.mwiVisible="0" up.onHookDialingEnabled="1" up.useDirectoryNames="0" up.welcomeSoundEnabled="1" up.welcomeSoundOnWarmBootEnabled="0" up.oneTouchVoiceMail="1" up.numberFirstCID="0">
    <up.2P5mmJack up.2P5mmJack.mode="0">
    </up.2P5mmJack>
    <up.audioSetup up.audioSetup.auxInput="2" up.audioSetup.auxOutput="2">
    </up.audioSetup>
    <up.backlight up.backlight.idleIntensity="1" up.backlight.onIntensity="3">
    </up.backlight>
    <up.idleBrowser up.idleBrowser.enabled="0">
    </up.idleBrowser>
    <up.manualProtocolRouting up.manualProtocolRouting.softKeys="1">
    </up.manualProtocolRouting>
    <up.offHookAction up.offHookAction.none="0">
    </up.offHookAction>
    <up.pictureFrame up.pictureFrame.folder="" up.pictureFrame.timePerImage="5">
    </up.pictureFrame>
    <up.screenSaver up.screenSaver.enabled="0" up.screenSaver.waitTime="15">
    </up.screenSaver>
    <up.toneControl up.toneControl.bass="0" up.toneControl.treble="0">
    </up.toneControl>
  </up>
  <voIpProt>
    <voIpProt.SIP>
      <voIpProt.SIP.alertInfo voIpProt.SIP.alertInfo.1.class="AutoAnswer" voIpProt.SIP.alertInfo.1.value="<auto-answer>"/>
      <voIpProt.SIP.assuredService>
        <voIpProt.SIP.assuredService.namespace>
          <voIpProt.SIP.assuredService.namespace.label>
            <voIpProt.SIP.assuredService.namespace.label.UCRdrsn voIpProt.SIP.assuredService.namespace.label.UCRdrsn.1="" voIpProt.SIP.assuredService.namespace.label.UCRdrsn.2="">
            </voIpProt.SIP.assuredService.namespace.label.UCRdrsn>
            <voIpProt.SIP.assuredService.namespace.label.UCRdsn voIpProt.SIP.assuredService.namespace.label.UCRdsn.1="" voIpProt.SIP.assuredService.namespace.label.UCRdsn.2="">
            </voIpProt.SIP.assuredService.namespace.label.UCRdsn>
            <voIpProt.SIP.assuredService.namespace.label.custom voIpProt.SIP.assuredService.namespace.label.custom.1="" voIpProt.SIP.assuredService.namespace.label.custom.2="">
            </voIpProt.SIP.assuredService.namespace.label.custom>
            <voIpProt.SIP.assuredService.namespace.label.drsn voIpProt.SIP.assuredService.namespace.label.drsn.1="" voIpProt.SIP.assuredService.namespace.label.drsn.2="">
            </voIpProt.SIP.assuredService.namespace.label.drsn>
            <voIpProt.SIP.assuredService.namespace.label.dsn voIpProt.SIP.assuredService.namespace.label.dsn.1="" voIpProt.SIP.assuredService.namespace.label.dsn.2="">
            </voIpProt.SIP.assuredService.namespace.label.dsn>
          </voIpProt.SIP.assuredService.namespace.label>
        </voIpProt.SIP.assuredService.namespace>
      </voIpProt.SIP.assuredService>
    </voIpProt.SIP>
  </voIpProt>
</polycomConfig>