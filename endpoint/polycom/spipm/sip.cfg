<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- Generated sip-basic.cfg Configuration File -->
<!--
#################PROVISIONER.NET#################
# This Configuration file was generated from the Provisioner.net Library by {$provisioner_processor_info}
# Generated on: {$provisioner_generated_timestamp}
# 
# Provisioner Information Follows:
# Brand Revision Timestamp: {$provisioner_brand_timestamp}
# Family Revision Timestamp: {$provisioner_family_timestamp}
#
##################################################
-->
<polycomConfig xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="polycomConfig.xsd">
	<feature feature.directedCallPickup.enabled="1" feature.enhancedFeatureKeys.enabled="1" feature.presence.enabled="{{ feature.presence }}" />
	<call call.directedCallPickupMethod="legacy" call.directedCallPickupString="**" />
  <voIpProt>
     <SIP
	   voIpProt.SIP.specialEvent.checkSync.alwaysReboot="1"
	   voIpProt.SIP.enable="1"
	   voIpProt.SIP.local.port="{{ local_port|default('5060') }}"/>
	<alertInfo
		voIpProt.SIP.alertInfo.1.value="Ring Answer"
		voIpProt.SIP.alertInfo.1.class="4"/>
  </voIpProt>
  <se
     se.stutterOnVoiceMail="1"
     se.pat.misc.messageWaiting.name="message waiting"
     se.pat.misc.messageWaiting.inst.1.type="{{ wmi_tone }}"
     se.pat.misc.messageWaiting.inst.1.value="cs1"
     se.pat.misc.messageWaiting.inst.2.type="{{ wmi_tone }}"
     se.pat.misc.messageWaiting.inst.2.value="cs2"
     se.pat.misc.messageWaiting.inst.3.type="{{ wmi_tone }}"
     se.pat.misc.messageWaiting.inst.3.value="cs1"/>
  <QOS>
     <Ethernet>
        <RTP qos.ethernet.rtp.user_priority="{{ qos.ethernet.user_priority.rtp|default('5') }}"/>
        <CallControl qos.ethernet.callControl.user_priority="{{ qos.ethernet.user_priority.callControl|default('5') }}"/>
        <Other qos.ethernet.other.user_priority="{{ qos.ethernet.user_priority.other|default('2') }}"/>
     </Ethernet>
     <IP>
        <RTP
	    qos.ip.rtp.dscp="{{ qos.ip.rtp.dscp }}"
	    qos.ip.rtp.min_delay="{{ qos.ip.rtp.min_delay|default('1') }}"
	    qos.ip.rtp.max_throughput="{{ qos.ip.rtp.max_throughput|default('1') }}"
	    qos.ip.rtp.max_reliability="{{ qos.ip.rtp.max_reliability|default('0') }}"
	    qos.ip.rtp.min_cost="{{ qos.ip.rtp.min_cost|default('1') }}"
	    qos.ip.rtp.precedence="{{ qos.ip.rtp.precedence|default('5') }}"/>

        <CallControl
	    qos.ip.callControl.dscp="{{ qos.ip.callControl.dscp }}"
	    qos.ip.callControl.min_delay="{{ qos.ip.callControl.min_delay|default('1') }}"
	    qos.ip.callControl.max_throughput="{{ qos.ip.callControl.max_throughput|default('0') }}"
	    qos.ip.callControl.max_reliability="{{ qos.ip.callControl.max_reliability|default('0') }}"
	    qos.ip.callControl.min_cost="{{ qos.ip.callControl.min_cost|default('0') }}"
	    qos.ip.callControl.precedence="{{ qos.ip.callControl.precedence|default('5') }}"/>
     </IP>
  </QOS>
  <TCP_IP>
     <SNTP
       tcpIpApp.sntp.resyncPeriod="{{ tcp_ip.sntp.resyncPeriod|default('7200') }}"
       tcpIpApp.sntp.address="{{ tcp_ip.sntp.address|default('pool.ntp.org') }}"
       tcpIpApp.sntp.address.overrideDHCP="{{ tcp_ip.sntp.address_overrideDHCP|default('1') }}"
       tcpIpApp.sntp.gmtOffset="{{ timezone }}"
       tcpIpApp.sntp.gmtOffset.overrideDHCP="{{ tcp_ip.sntp.gmtOffset_overrideDHCP|default('1') }}"
       tcpIpApp.sntp.daylightSavings.enable="{{ tcp_ip.sntp.daylightSavings|default('0') }}"/>
  </TCP_IP>
  <logging>
     <level>
        <change log.level.change.so="4" log.level.change.app1="4" log.level.change.sip="4" log.level.change.ssps="4" log.level.change.pps="4" log.level.change.net="4" log.level.change.cfg="4" log.level.change.cdp="4" log.level.change.pmt="4" log.level.change.ares="4" log.level.change.dns="4" log.level.change.httpd="4" log.level.change.rdisk="4" log.level.change.copy="4" log.level.change.slog="4" log.level.change.res="4" log.level.change.key="4" log.level.change.log="4" log.level.change.curl="4" log.level.change.rtos="4" log.level.change.mb="4" log.level.change.ib="4" log.level.change.ttrs="4" log.level.change.usb="{{ log.level.change.usb|default('4') }}"/>
     </level>
     <render log.render.level="1" log.render.type="2" log.render.realtime="1" log.render.stdout="1" log.render.file="1" log.render.file.size="16" log.render.file.upload.period="172800" log.render.file.upload.append="1" log.render.file.upload.append.sizeLimit="512" log.render.file.upload.append.limitMode="{{ log.render.file.upload.append.limitMode|default('delete') }}"/>
     <scheduled log.sched.1.name="showCpuLoad" log.sched.1.level="3" log.sched.1.period="15" log.sched.1.startMode="rel" log.sched.1.startTime="0" log.sched.1.startDay="0" />
  </logging>
</polycomConfig>
